// Generated by CoffeeScript 1.7.1

/*
This is docstring documents BaseCrud. It can include *Markdown* syntax,
which will be converted to html.
 */

(function() {
  var BaseCrud,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  BaseCrud = (function() {
    function BaseCrud() {
      this.read = __bind(this.read, this);
    }

    BaseCrud.prototype.createError = function(method) {
      var error;
      error = new Error("Unimplemented " + method);
      return error;
    };

    BaseCrud.prototype.read = function(BaseModelClazz, aFilter, sQuery, aSort, iOffset, iLimit, callback) {
      if (aFilter == null) {
        aFilter = [];
      }
      if (sQuery == null) {
        sQuery = '';
      }
      if (aSort == null) {
        aSort = [];
      }
      if (iOffset == null) {
        iOffset = 0;
      }
      if (iLimit == null) {
        iLimit = 15;
      }
      callback(this.createError('read'), null, null, null);
    };

    BaseCrud.prototype.readOne = function(BaseModelClazz, id, callback) {
      callback(this.createError('readOne'), null);
    };

    BaseCrud.prototype.create = function(BaseModelClazz, value, callback) {
      callback(this.createError('create'), null);
    };

    BaseCrud.prototype.update = function(BaseModelClazz, id, value, callback) {
      callback(this.createError('update'), null);
    };

    BaseCrud.prototype["delete"] = function(BaseModelClazz, id, callback) {
      callback(this.createError('delete'), null);
    };

    BaseCrud.prototype.deleteAll = function(BaseModelClazz, callback) {
      callback(this.createError('deleteAll'), null);
    };

    return BaseCrud;

  })();

  exports.BaseCrud = BaseCrud;

}).call(this);

//# sourceMappingURL=crud.map
